{"version":3,"sources":["webpack:///./src/components/DotCanvas/DotCanvas.js","webpack:///./src/components/Type.js","webpack:///./src/components/Card.js","webpack:///./src/components/Row.js","webpack:///./src/PageComponents/Home/Components/Intro.js","webpack:///./src/PageComponents/Home/Components/Jobs.js","webpack:///./src/PageComponents/Home/Home.js","webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/DotCanvas/Dots.js","webpack:///./src/data/employment.js"],"names":["DotCanvas","initCanvas","ref","require","default","render","Object","core_browser_esm","this","props","Mask","React","Component","styled_base_browser_esm","target","name","styles","Colors","LIGHT","NORMAL","Title","fontSize","fontWeight","marginBottom","color","Subtitle","Card","Row","Photo","Padded","Social","components_Row","MockSocialIcon","height","width","borderRadius","backgroundColor","marginLeft","opacity","IntroCard","_ref","_ref$photo","photo","components_Card","style","padding","src","justifyContent","Intro_Social","Jobs","jobs","map","job","i","Jobs_Job","key","Job","objectWithoutPropertiesLoose_default","Logo","image","JobTitle","title","JobSubtitle","subtitle","date","RoleDate","current","_ref2","backgroundImage","position","textAlign","left","top","& span","display","BackgroundDotCanvas","Centered","SectionHeading","IndexPage","layout","above","marginTop","Intro","__webpack_exports__","Home","Layout","children","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","meta","content","lang","href","rel","type","propTypes","PropTypes","node","isRequired","$","MAX_DIAMETER","VELOCITY","DOT_COUNT","COLOR","COLORS","Canvas","$container","canvas","document","createElement","outerWidth","outerHeight","context","getContext","dots","_","times","Dot","Math","round","random","length","bind","arc","Arc","prepend","animating","lastArc","Date","now","window","on","b","toProgress","fromProgress","x","y","maxVelocity","direction","velocity","originalX","dMax","max","d","dy","min","speed","wander","prototype","drawArc","coordinates","getCoordinates","dTheta","polar","bTheta","aTheta","beginPath","lineWidth","strokeStyle","cartesianCenter","radius","stroke","drawDot","dot","time","fillStyle","PI","fill","isDotOutOfBounds","start","stop","clearRect","forEach","updatePosition","isComplete","nextArc","shuffle","j","dX","abs","dY","requestAnimationFrame","cX","cY","sqrt","pow","atan","timestamp","sin","ready","el","each","element","innerHeight","console","log","module","exports","summary","skills"],"mappings":"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","file":"component---src-pages-index-js-089d3f5a58024973a5f0.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nexport default class DotCanvas extends React.Component {\n  initCanvas(ref) {\n    if (ref) {\n      require('./Dots').default(ref);\n    }\n  }\n\n  render() {\n    return (\n      <div {...this.props}>\n        <div ref={this.initCanvas} />\n        <Mask />\n      </div>\n    );\n  }\n}\n\nconst Mask = styled.div({\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  backgroundColor: 'rgba(255, 255, 255, 0.75)'\n})\n","import styled from '@emotion/styled';\n\nexport const Colors = {\n  Gray: {\n    LIGHT: '#b7b9bb',\n    NORMAL: '#6a6a6a'\n  },\n  White: {\n    NORMAL: '#fff'\n  },\n  Blue: {\n    NORMAL: '#31a2d4'\n  },\n  Black: {\n    NORMAL: '#32383e'\n  },\n  Orange: {\n    NORMAL: '#FF9900'\n  }\n};\n\nexport const Title = styled.div({\n  fontSize: 24,\n  fontWeight: 600,\n  marginBottom: 4,\n  color: Colors.Black.NORMAL\n});\n\nexport const Subtitle = styled.div({\n  fontSize: 18,\n  marginBottom: 4,\n  color: Colors.Black.NORMAL\n})\n","import styled from '@emotion/styled';\n\nconst Card = styled.div({\n  position: 'relative',\n  padding: 20,\n  backgroundColor: 'rgba(255, 255, 255, 0.8)',\n  display: 'flex',\n  flexDirection: 'column',\n  boxShadow: '0px 0px 4px 0px rgba(0,0,0,0.25)',\n  borderRight: 4\n});\n\nexport default Card;\n","import styled from '@emotion/styled';\n\nconst Row = styled.div({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center'\n});\n\nexport default Row;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Card from 'Components/Card';\nimport Row from 'Components/Row';\nimport {Title, Subtitle, Colors} from 'Components/Type';\n\nconst IntroCard = ({\n  photo = 'https://pbs.twimg.com/profile_images/378800000310470879/b66c49481eb365dae8ea695031b60be7_400x400.jpeg'\n}) => (\n  <Card style={{width: '100%', padding: 0}}>\n    <Photo src={photo} />\n\n    <Padded>\n      <Row style={{justifyContent: 'space-between'}}>\n        <div>\n          <Title fontSize={24} marginBottom={4}>Atticus White</Title>\n          <Subtitle fontSize={18} marginBottom={0}>Turns ideas into things</Subtitle>\n        </div>\n        <Social />\n      </Row>\n    </Padded>\n  </Card>\n)\n\nconst Photo = styled.img({\n  width: '100%',\n  marginBottom: 8\n});\n\nconst Padded = styled.div({\n  padding: '0px 16px'\n})\n\nconst Social = () => (\n  <Row>\n    <MockSocialIcon />\n    <MockSocialIcon />\n    <MockSocialIcon />\n  </Row>\n)\n\nconst MockSocialIcon = styled.div({\n  height: 28,\n  width: 28,\n  borderRadius: '50%',\n  backgroundColor: Colors.Gray.LIGHT,\n  marginLeft: 8,\n  opacity: 0.5\n})\n\nexport default IntroCard\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Card from 'Components/Card';\nimport Row from 'Components/Row';\nimport {Title, Subtitle, Colors} from 'Components/Type';\nimport jobs from '../../../data/employment';\n\nexport default function Jobs (props) {\n  return (\n    <div style={{width: '100%'}}>\n      {jobs.map((job, i) => (\n        <Job\n          job={job}\n          key={i}\n          style={{marginBottom: 18}}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst Job = ({job, ...props}) => (\n  <Card {...props}>\n    <Row>\n      <Logo src={job.image} />\n      <div>\n        <JobTitle>{job.title}</JobTitle>\n        <JobSubtitle>{job.subtitle}</JobSubtitle>\n      </div>\n    </Row>\n    {job.date && <RoleDate current={job.date === 'Current'}><span>{job.date}</span></RoleDate>}\n  </Card>\n)\n\nconst Logo = styled.div({\n  height: 90,\n  width: 90,\n  backgroundSize: 'contain',\n  backgroundPosition: 'center',\n  backgroundRepeat: 'no-repeat',\n  borderRadius: 12,\n  marginRight: 16\n}, ({src}) => ({\n  backgroundImage: `url(${src})`\n}))\n\nconst JobTitle = styled(Title)({\n  fontSize: 24,\n  marginBottom: 10\n})\n\nconst JobSubtitle = styled(Subtitle)({\n  fontSize: 18,\n  marginBottom: 0\n})\n\nconst RoleDate = styled.div({\n  position: 'absolute',\n  textAlign: 'right',\n  left: -120,\n  width: 100,\n  top: 50,\n  fontSize: 18,\n  color: Colors.Black.NORMAL\n}, props => props.current && ({\n  // color: '#4ab223',\n  color: '#fff',\n  // fontWeight: 'bold',\n  '& span': {\n    display: 'inline-block',\n    backgroundColor: '#4ab223',\n    padding: '6px 8px',\n    borderRadius: 4\n  }\n}))\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport Layout from 'Components/layout'\nimport DotCanvas from 'Components/DotCanvas/DotCanvas'\nimport {Title} from 'Components/Type';\nimport IntroCard from './Components/Intro';\nimport Jobs from './Components/Jobs';\n\nconst BackgroundDotCanvas = styled(DotCanvas)({\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n})\n\nconst IndexPage = () => (\n  <Layout above={<BackgroundDotCanvas />}>\n    <Centered style={{marginTop: 100}}>\n      <IntroCard />\n\n      <SectionHeading>{`What I've been up to`}</SectionHeading>\n      <Jobs />\n    </Centered>\n  </Layout>\n)\n\nconst Centered = styled.div({\n  position: 'relative',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  width: 470,\n  marginLeft: 'auto',\n  marginRight: 'auto'\n})\n\nconst SectionHeading = styled(Title)({\n  fontSize: 28,\n  marginTop: 32,\n  marginBottom: 24\n})\n\nexport default IndexPage\n","import React from 'react'\nimport Home from '../PageComponents/Home';\n\nexport default props => <Home {...props} />;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\n// import Header from './header'\nimport './layout.css'\n\nconst Layout = ({children, above}) => (\n  <>\n    <Helmet\n      title=\"Atticus White - Software Engineer, Boston MA\"\n      meta={[\n        {name: 'description', content: 'Atticus White is a Software Engineer based in Boston focusing on React.'},\n        {name: 'keywords', content: 'atticus, white, software, engineer, wordpress, gatsby, react, atticus white, atticoos'}\n      ]}\n    >\n      <html lang=\"en\" />\n      <link href=\"https://fonts.googleapis.com/css?family=Raleway:400,600|Open+Sans:400,300,700,600\" rel=\"stylesheet\" type=\"text/css\" />\n      <style type=\"text/css\">{`\n        html,body {\n          font-family: 'Open Sans', sans-serif;\n        }\n      `}</style>\n    </Helmet>\n    {above}\n    <div style={{position: 'relative'}}>\n      {/* <Header siteTitle=\"Atticus White\" /> */}\n      <div>\n        {children}\n      </div>\n    </div>\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import _ from 'lodash'\nexport default (function ($) {\n  var MAX_DIAMETER = 30;\n  var VELOCITY = 0.8;\n  var DOT_COUNT = 25;\n  var COLOR = '#e0e6ed';\n  var COLORS = ['#FF9900', '#424242', '#BCBCBC', '#3299BB'];\n\n  function Canvas ($container) {\n    this.$container = $container;\n    this.canvas = document.createElement('canvas');\n    // this.canvas.style=\"filter:blur(3px)\"\n    this.canvas.width = $container.outerWidth();\n    this.canvas.height = $container.outerHeight();\n    this.context = this.canvas.getContext('2d');\n    this.dots = _.times(DOT_COUNT, function () {\n      return new Dot(\n        Math.round(Math.random() * this.canvas.width),\n        Math.round(Math.random() * this.canvas.height),\n        COLORS[_.random(0, COLORS.length - 1)]\n      );\n    }.bind(this));\n    this.arc = new Arc(this.dots[0], this.dots[1]);\n    this.$container.prepend(this.canvas);\n    this.animating = false;\n    this.lastArc = Date.now();\n    this.render = this.render.bind(this);\n    $(window).on('resize', function () {\n      var width = $(window).width();\n      var height = $(window).height();\n      this.canvas.width = width;\n      this.canvas.height = height;\n      $container.height(height);\n    }.bind(this));\n  }\n\n  Canvas.prototype.drawArc = function () {\n    var coordinates = this.arc.getCoordinates();\n    var dTheta = (coordinates.polar.bTheta - coordinates.polar.aTheta) / 100;\n\n    this.context.beginPath();\n    // this.context.strokeStyle = COLOR;\n    this.context.lineWidth = 4;\n\n    if (this.arc.toProgress < 100) {\n      let target = this.arc.a.x < this.arc.b.x ? this.arc.a : this.arc.b;\n      // Animate line filling in\n      let d = dTheta * this.arc.toProgress;\n      this.arc.toProgress += 2;\n      this.context.strokeStyle = target.color;\n      this.context.arc(\n        coordinates.cartesianCenter.x,\n        coordinates.cartesianCenter.y,\n        coordinates.polar.radius,\n        coordinates.polar.aTheta,\n        coordinates.polar.aTheta - d\n      );\n    } else if (this.arc.fromProgress < 100) {\n      let target = this.arc.a.x > this.arc.b.x ? this.arc.a : this.arc.b;\n      // Animate line leaving\n      let d = dTheta * this.arc.fromProgress;\n      this.arc.fromProgress += 2;\n      this.context.strokeStyle = target.color;\n      this.context.arc(\n        coordinates.cartesianCenter.x,\n        coordinates.cartesianCenter.y,\n        coordinates.polar.radius,\n        coordinates.polar.aTheta - d,\n        coordinates.polar.bTheta\n      );\n    }\n    this.context.stroke();\n  };\n\n  Canvas.prototype.drawDot = function (dot, time) {\n    this.context.fillStyle = dot.color;\n    this.context.beginPath();\n    this.context.arc(dot.x, dot.y, dot.d, 0, Math.PI * 2, false);\n    this.context.fill();\n  };\n\n  Canvas.prototype.isDotOutOfBounds = function (dot) {\n    return dot.x > (this.canvas.width + dot.d / 2) ||\n      dot.x < (-dot.d / 2) ||\n      dot.y > (this.canvas.height + (dot.d / 2)) ||\n      dot.y < -(dot.d / 2);\n  }\n\n  Canvas.prototype.start = function () {\n    this.animating = true;\n    this.time = Date.now();\n    this.render();\n  };\n\n  Canvas.prototype.stop = function () {\n    this.animating = false;\n  }\n\n  Canvas.prototype.render = function (time) {\n    if (!this.animating) {\n      return;\n    }\n    time = this.time + time;\n    // console.log(time, Date.n/ow());\n\n    // Clear the frame for the new render\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Update the position of each dot and render them\n    _.forEach(this.dots, function (dot, i) {\n      dot.updatePosition(time);\n      this.drawDot(dot, time);\n\n      // If a dot falls off the screen, trash it and create a new dot\n      if (this.isDotOutOfBounds(dot)) {\n        this.dots[i] = new Dot(\n          Math.round(Math.random() * this.canvas.width),\n          Math.round(Math.random() * this.canvas.height),\n          COLORS[_.random(0, COLORS.length - 1)]\n        );\n      }\n    }.bind(this));\n\n    if (!this.arc.isComplete()) {\n      // Draw an arc between two dots\n      this.drawArc();\n    } else if (time - this.lastArc > 1000 * 2) {\n      // After the last arc expires, create a new arc.\n      var dots = _.shuffle(this.dots);\n      var nextArc;\n      for (var i = 0; i < dots.length - 1; i++) {\n        for (var j = i + 1; j < dots.length; j++) {\n          if (nextArc) break;\n\n          var dX = Math.abs(dots[j].x - dots[i].x);\n          var dY = Math.abs(dots[j].y - dots[i].y);\n          if (dX <= 350 && dY <= 350 && dX >= 80 && dY >= 80) {\n            nextArc = new Arc(dots[i], dots[j]);\n          }\n        }\n      }\n      this.arc = nextArc;\n      this.lastArc = time;\n    }\n\n    requestAnimationFrame(this.render);\n  }\n\n  function generateRandomVelocity (maxVelocity) {\n    var direction = Math.random() < 0.5 ? 1 : -1;\n    var lowerBound = 0.2;\n    var velocity = direction * Math.random() * maxVelocity;\n\n    if (direction > 0) {\n      return Math.max(direction * lowerBound, velocity);\n    } else {\n      return Math.min(direction * lowerBound, velocity);\n    }\n    // return Math.max(0.2, (Math.random() < 0.5 ? 1 : -1) * Math.random() * velocity);\n  }\n\n  function Arc (a, b) {\n    this.a = a;\n    this.b = b;\n    this.toProgress = 0;\n    this.fromProgress = 0;\n  }\n\n  Arc.prototype.isComplete = function () {\n    return this.toProgress >= 100 && this.fromProgress >= 100;\n  };\n\n  Arc.prototype.getCoordinates = function () {\n    // Center between two points\n    var cX = (this.a.x + this.b.x) / 2;\n    var cY = (this.a.y + this.b.y) / 2;\n\n    // Distance between two points\n    var dX = this.b.x - this.a.x;\n    var dY = this.b.y - this.a.y;\n\n    // Arc radius\n    var r = Math.sqrt(Math.pow(dX, 2) + Math.pow(dY, 2)) / 2;\n\n    // Cartesian to polar points.\n    // Also construct a relative point system based on the center of the polar region.\n    var aTheta = Math.PI + Math.atan((this.a.y - cY) / (this.a.x - cX));\n    var bTheta = Math.atan((this.b.y - cY) / (this.b.x - cX));\n\n    return {\n      cartesianCenter: {\n        x: cX,\n        y: cY\n      },\n      polar: {\n        radius: r,\n        aTheta: aTheta,\n        bTheta: bTheta\n      }\n    };\n  };\n\n  function Dot (x, y, color = COLOR) {\n    this.x = x;\n    this.y = y;\n    this.originalX = x;\n    this.dMax = Math.max(5, Math.random() * MAX_DIAMETER);\n    this.d = 0;\n    this.dy = generateRandomVelocity(VELOCITY);\n    this.color = color;\n    this.speed = 1000 + Math.random() * 1000;\n    this.wander = Math.random() * 100;\n  }\n\n  Dot.prototype.updatePosition = function (timestamp) {\n    this.x = this.wander * Math.sin(timestamp / this.speed) + this.originalX;\n    this.y += this.dy;\n\n    // Grow from a collapsed dot\n    if (this.d < this.dMax) {\n      this.d = Math.min(this.dMax, this.d += 0.25);\n    }\n  };\n\n  function buildCanvas (element) {\n    element.height($(window).innerHeight());\n    console.log('wtf', element)\n    var canvas = new Canvas(element);\n    canvas.start();\n  }\n\n  $(document).ready(function () {\n    // $('.dots-canvas').each(function () {\n    //   buildCanvas($(this));\n    // });\n  });\n\n  return (el) => {\n    $(el || '.dots-canvas').each(function () {\n      buildCanvas($(this));\n    });\n  }\n})(require('jquery'));\n\n\n/*import {Layer, Rect, Stage, Circle, Group, Arc} from 'react-konva'\nimport _ from 'lodash'\n  var MAX_DIAMETER = 30;\n  var VELOCITY = 0.8;\n  var DOT_COUNT = 30;\n  var COLOR = '#e0e6ed';\nexport default class Dots extends React.Component {\n  static defaultProps = {\n    width: 768,\n    height: 900,\n    dotCount: 30\n  }\n\n  state = {};\n\n  constructor(props) {\n    super(props)\n\n    this.state.dots = _.times(props.dotCount, () => new Dot(\n      Math.round(Math.random() * props.width),\n      Math.round(Math.random() * props.height)\n    ))\n\n    this.state.arc = new ArcModel(\n      this.state.dots[0],\n      this.state.dots[1]\n    )\n\n    this.circleRefs = []\n\n    this.paint = this.paint.bind(this)\n  }\n\n  componentDidMount() {\n    this.time = new Date();\n    setTimeout(() => this.paint(), 1000)\n  }\n\n  isDotOutOfBonds(dot) {\n    return dot.x > (this.props.width + dot.d / 2) ||\n      dot.x < (-dot.d / 2) ||\n      dot.y > (this.props.height + (dot.d / 2)) ||\n      dot.y < -(dot.d / 2);\n  }\n\n  paint(time = 0) {\n    this.time = this.time + time;\n    console.log('painting')\n\n    // if (!this.state.arc.isComplete() && this.arcRef) {\n    //   let coordinates = this.state.arc.getCoordinates()\n    //   let dTheta = (coordinates.polar.bTheta - coordinates.polar.aTheta) / 100;\n\n    //   if (this.state.arc.toProgress < 100) {\n    //     let d = dTheta * this.state.arc.toProgress;\n    //     this.state.arc.toProgress += 2;\n\n    //     this.arcRef.to({\n    //       x: coordinates.cartesianCenter.x,\n    //       y: coordinates.cartesianCenter.y,\n    //       outerRadius: coordinates.polar.radius,\n    //       innerRadius: coordinates.polar.radius - 1,\n    //       angle: r2d(coordinates.polar.aTheta),\n    //       rotationDeg: r2d(coordinates.polar.aTheta - d)\n    //     })\n    //   } else if (this.state.arc.fromProgress < 100) {\n    //     let d = dTheta * this.arcRef.fromProgress;\n\n    //     this.arcRef.to({\n    //       x: coordinates.cartesianCenter.x,\n    //       y: coordinates.cartesianCenter.y,\n    //       outerRadius: coordinates.polar.radius,\n    //       innerRadius: coordinates.polar.radius - 1,\n    //       angle: r2d(coordinates.polar.aTheta - d),\n    //       rotationDeg: r2d(coordinates.polar.bTheta)\n    //     })\n    //   }\n    // }\n\n    this.state.dots.forEach((dot, i) => {\n      dot.updatePosition(time)\n\n      if (this.circleRefs[i]) {\n        console.log('moving', i, dot.x, dot.y)\n        this.circleRefs[i].to({\n          x: dot.x,\n          y: dot.y,\n          duration:0.1\n        })\n      }\n\n      if (this.isDotOutOfBonds(dot)) {\n        this.state.dots[i] = new Dot(\n          Math.round(Math.random() * this.props.width),\n          Math.round(Math.random() * this.props.height)\n        )\n      }\n    })\n\n\n    // setTimeout(() => this.paint(10), 100);\n    requestAnimationFrame(this.paint)\n  }\n\n  render() {\n    console.log('render', this.state)\n\n    return (\n      <Stage width={this.props.width} height={this.props.height}>\n        <Layer>\n          {this.state.dots.map((dot, i) => (\n            <Circle\n              ref={comp => this.circleRefs[i] = comp}\n              key={i}\n              x={dot.x}\n              y={dot.y}\n              radius={dot.d}\n              fill={COLOR}\n            />\n          ))}\n        </Layer>\n      </Stage>\n    )\n  }\n}\n\nconst r2d = r => r * (180 / Math.PI);\n\n  function ArcModel (a, b) {\n    this.a = a;\n    this.b = b;\n    this.toProgress = 0;\n    this.fromProgress = 0;\n  }\n\n  ArcModel.prototype.isComplete = function () {\n    return this.toProgress >= 100 && this.fromProgress >= 100;\n  };\n\n  ArcModel.prototype.getCoordinates = function () {\n    // Center between two points\n    var cX = (this.a.x + this.b.x) / 2;\n    var cY = (this.a.y + this.b.y) / 2;\n\n    // Distance between two points\n    var dX = this.b.x - this.a.x;\n    var dY = this.b.y - this.a.y;\n\n    // Arc radius\n    var r = Math.sqrt(Math.pow(dX, 2) + Math.pow(dY, 2)) / 2;\n\n    // Cartesian to polar points.\n    // Also construct a relative point system based on the center of the polar region.\n    var aTheta = Math.PI + Math.atan((this.a.y - cY) / (this.a.x - cX));\n    var bTheta = Math.atan((this.b.y - cY) / (this.b.x - cX));\n\n    return {\n      cartesianCenter: {\n        x: cX,\n        y: cY\n      },\n      polar: {\n        radius: r,\n        aTheta: aTheta,\n        bTheta: bTheta\n      }\n    };\n  };\n\n  function Dot (x, y) {\n    this.x = x;\n    this.y = y;\n    this.originalX = x;\n    this.d = Math.max(5, Math.random() * MAX_DIAMETER);\n    this.dy = generateRandomVelocity(VELOCITY);\n    this.color = COLOR;\n    this.speed = 1000 + Math.random() * 1000;\n    this.wander = Math.random() * 100;\n  }\n\n  Dot.prototype.updatePosition = function (timestamp) {\n    this.x = this.wander * Math.sin(timestamp / this.speed) + this.originalX;\n    // this.x += this.dx;\n    this.y += this.dy;\n  };\n\n  function generateRandomVelocity (maxVelocity) {\n    var direction = Math.random() < 0.5 ? 1 : -1;\n    var lowerBound = 0.2;\n    var velocity = direction * Math.random() * maxVelocity;\n\n    if (direction > 0) {\n      return Math.max(direction * lowerBound, velocity);\n    } else {\n      return Math.min(direction * lowerBound, velocity);\n    }\n\n    return Math.max(0.2, (Math.random() < 0.5 ? 1 : -1) * Math.random() * velocity);\n  }*/\n","module.exports = [\n  {\n    image: 'https://images.robinpowered.com/redirect/?size=thumb&url=https://static.robinpowered.com/reimagine/images/b14982bcc534142bc33f18947c2ef4876b87c8a3.png',\n    title: 'Robin Powered',\n    subtitle: 'Lead Software Engineer',\n    date: 'Current',\n    summary: []\n    // skills: ['Architecture', 'Leadership', 'Product Development']\n  },\n  // {\n  //   image: 'https://images.robinpowered.com/redirect/?size=thumb&url=https://static.robinpowered.com/reimagine/images/b14982bcc534142bc33f18947c2ef4876b87c8a3.png',\n  //   title: 'Robin Powered',\n  //   subtitle: 'Software Developer',\n  //   date: '2014',\n  //   skills: ['React + React Native']\n  // },\n  {\n    image: 'https://images.robinpowered.com/redirect/?size=thumb&url=https://static.robinpowered.com/reimagine/images/defd52de09560577ce6e0d6ddc4a8e639cc5e27f.png',\n    title: 'One Mighty Roar',\n    subtitle: 'Software Developer',\n    date: 2014,\n    skills: ['NodeJS']\n  },\n  {\n    image: '/static/parklabs.png',\n    title: 'Park Labs',\n    subtitle: 'Software Developer',\n    date: 2012,\n    skills: ['Advanced JavaScript, Angular, PHP']\n  },\n  {\n    image: 'https://cdn4.iconfinder.com/data/icons/small-n-flat/24/terminal-512.png',\n    title: 'Consulting',\n    subtitle: 'Web Developer',\n    date: 2008\n  }\n]\n"],"sourceRoot":""}