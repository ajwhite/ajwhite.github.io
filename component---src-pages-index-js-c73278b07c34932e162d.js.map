{"version":3,"sources":["webpack:///./src/components/DotCanvas/DotCanvas.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/DotCanvas/Dots.js"],"names":["DotCanvas","initCanvas","ref","require","default","render","Object","core_browser_esm","this","props","Mask","React","Component","styled_base_browser_esm","target","name","styles","BackgroundDotCanvas","IndexPage","layout","above","gatsby_browser_entry","to","StaticQueryContext","createContext","StaticQuery","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","data","query","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","Layout","react_default","a","Fragment","Helmet_default","title","meta","content","lang","position","header","node","__webpack_exports__","$","MAX_DIAMETER","VELOCITY","DOT_COUNT","COLOR","COLORS","Canvas","$container","canvas","document","width","outerWidth","height","outerHeight","context","getContext","dots","_","times","Dot","Math","round","random","length","bind","arc","Arc","prepend","animating","lastArc","Date","now","window","on","b","toProgress","fromProgress","x","y","maxVelocity","direction","velocity","originalX","d","max","dy","min","speed","wander","prototype","drawArc","coordinates","getCoordinates","dTheta","polar","bTheta","aTheta","beginPath","lineWidth","strokeStyle","cartesianCenter","radius","stroke","drawDot","dot","time","fillStyle","PI","fill","isDotOutOfBounds","start","stop","clearRect","forEach","i","updatePosition","isComplete","nextArc","shuffle","j","dX","abs","dY","requestAnimationFrame","cX","cY","sqrt","pow","atan","timestamp","sin","ready","el","each","element","innerHeight","console","log"],"mappings":"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","file":"component---src-pages-index-js-c73278b07c34932e162d.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nexport default class DotCanvas extends React.Component {\n  initCanvas(ref) {\n    if (ref) {\n      require('./Dots').default(ref);\n    }\n  }\n\n  render() {\n    return (\n      <div {...this.props}>\n        <div ref={this.initCanvas} />\n        <Mask />\n      </div>\n    );\n  }\n}\n\nconst Mask = styled.div({\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  backgroundColor: 'rgba(255, 255, 255, 0.75)'\n})\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Layout from '../components/layout'\nimport Image from '../components/image'\nimport DotCanvas from 'Components/DotCanvas/DotCanvas'\n\nconst BackgroundDotCanvas = styled(DotCanvas)({\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n})\n\nconst IndexPage = () => (\n  <Layout above={<BackgroundDotCanvas />}>\n    <h1>Hi people</h1>\n    {/* <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <div style={{ maxWidth: '300px', marginBottom: '1.45rem' }}>\n      <Image />\n    </div> */}\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({children, above}) => (\n  <>\n    <Helmet\n      title=\"Atticus White - Software Engineer, Boston MA\"\n      meta={[\n        {name: 'description', content: 'Atticus White is a Software Engineer based in Boston focusing on React.'},\n        {name: 'keywords', content: 'atticus, white, software, engineer, wordpress, gatsby, react, atticus white, atticoos'}\n      ]}\n    >\n      <html lang=\"en\" />\n    </Helmet>\n    {above}\n    <div style={{position: 'relative'}}>\n      <Header siteTitle=\"Atticus White\" />\n      <div>\n        {children}\n        <div>footer</div>\n      </div>\n    </div>\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import _ from 'lodash'\nexport default (function ($) {\n  var MAX_DIAMETER = 30;\n  var VELOCITY = 0.8;\n  var DOT_COUNT = 25;\n  var COLOR = '#e0e6ed';\n  var COLORS = ['#FF9900', '#424242', '#BCBCBC', '#3299BB'];\n\n  function Canvas ($container) {\n    this.$container = $container;\n    this.canvas = document.createElement('canvas');\n    // this.canvas.style=\"filter:blur(3px)\"\n    this.canvas.width = $container.outerWidth();\n    this.canvas.height = $container.outerHeight();\n    this.context = this.canvas.getContext('2d');\n    this.dots = _.times(DOT_COUNT, function () {\n      return new Dot(\n        Math.round(Math.random() * this.canvas.width),\n        Math.round(Math.random() * this.canvas.height),\n        COLORS[_.random(0, COLORS.length - 1)]\n      );\n    }.bind(this));\n    this.arc = new Arc(this.dots[0], this.dots[1]);\n    this.$container.prepend(this.canvas);\n    this.animating = false;\n    this.lastArc = Date.now();\n    this.render = this.render.bind(this);\n    $(window).on('resize', function () {\n      var width = $(window).width();\n      var height = $(window).height();\n      this.canvas.width = width;\n      this.canvas.height = height;\n      $container.height(height);\n    }.bind(this));\n  }\n\n  Canvas.prototype.drawArc = function () {\n    var coordinates = this.arc.getCoordinates();\n    var dTheta = (coordinates.polar.bTheta - coordinates.polar.aTheta) / 100;\n\n    this.context.beginPath();\n    // this.context.strokeStyle = COLOR;\n    this.context.lineWidth = 4;\n\n    if (this.arc.toProgress < 100) {\n      let target = this.arc.a.x < this.arc.b.x ? this.arc.a : this.arc.b;\n      // Animate line filling in\n      var d = dTheta * this.arc.toProgress;\n      this.arc.toProgress += 2;\n      this.context.strokeStyle = target.color;\n      this.context.arc(\n        coordinates.cartesianCenter.x,\n        coordinates.cartesianCenter.y,\n        coordinates.polar.radius,\n        coordinates.polar.aTheta,\n        coordinates.polar.aTheta - d\n      );\n    } else if (this.arc.fromProgress < 100) {\n      let target = this.arc.a.x > this.arc.b.x ? this.arc.a : this.arc.b;\n      // Animate line leaving\n      var d = dTheta * this.arc.fromProgress;\n      this.arc.fromProgress += 2;\n      this.context.strokeStyle = target.color;\n      this.context.arc(\n        coordinates.cartesianCenter.x,\n        coordinates.cartesianCenter.y,\n        coordinates.polar.radius,\n        coordinates.polar.aTheta - d,\n        coordinates.polar.bTheta\n      );\n    }\n    this.context.stroke();\n  };\n\n  Canvas.prototype.drawDot = function (dot, time) {\n    this.context.fillStyle = dot.color;\n    this.context.beginPath();\n    this.context.arc(dot.x, dot.y, dot.d, 0, Math.PI * 2, false);\n    this.context.fill();\n  };\n\n  Canvas.prototype.isDotOutOfBounds = function (dot) {\n    return dot.x > (this.canvas.width + dot.d / 2) ||\n      dot.x < (-dot.d / 2) ||\n      dot.y > (this.canvas.height + (dot.d / 2)) ||\n      dot.y < -(dot.d / 2);\n  }\n\n  Canvas.prototype.start = function () {\n    this.animating = true;\n    this.time = Date.now();\n    this.render();\n  };\n\n  Canvas.prototype.stop = function () {\n    this.animating = false;\n  }\n\n  Canvas.prototype.render = function (time) {\n    if (!this.animating) {\n      return;\n    }\n    time = this.time + time;\n    // console.log(time, Date.n/ow());\n\n    // Clear the frame for the new render\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Update the position of each dot and render them\n    _.forEach(this.dots, function (dot, i) {\n      dot.updatePosition(time);\n      this.drawDot(dot, time);\n\n      // If a dot falls off the screen, trash it and create a new dot\n      if (this.isDotOutOfBounds(dot)) {\n        this.dots[i] = new Dot(\n          Math.round(Math.random() * this.canvas.width),\n          Math.round(Math.random() * this.canvas.height),\n          COLORS[_.random(0, COLORS.length - 1)]\n        );\n      }\n    }.bind(this));\n\n    if (!this.arc.isComplete()) {\n      // Draw an arc between two dots\n      this.drawArc();\n    } else if (time - this.lastArc > 1000 * 2) {\n      // After the last arc expires, create a new arc.\n      var dots = _.shuffle(this.dots);\n      var nextArc;\n      for (var i = 0; i < dots.length - 1; i++) {\n        for (var j = i + 1; j < dots.length; j++) {\n          if (nextArc) break;\n\n          var dX = Math.abs(dots[j].x - dots[i].x);\n          var dY = Math.abs(dots[j].y - dots[i].y);\n          if (dX <= 350 && dY <= 350 && dX >= 80 && dY >= 80) {\n            nextArc = new Arc(dots[i], dots[j]);\n          }\n        }\n      }\n      this.arc = nextArc;\n      this.lastArc = time;\n    }\n\n    requestAnimationFrame(this.render);\n  }\n\n  function generateRandomVelocity (maxVelocity) {\n    var direction = Math.random() < 0.5 ? 1 : -1;\n    var lowerBound = 0.2;\n    var velocity = direction * Math.random() * maxVelocity;\n\n    if (direction > 0) {\n      return Math.max(direction * lowerBound, velocity);\n    } else {\n      return Math.min(direction * lowerBound, velocity);\n    }\n\n    return Math.max(0.2, (Math.random() < 0.5 ? 1 : -1) * Math.random() * velocity);\n  }\n\n  function Arc (a, b) {\n    this.a = a;\n    this.b = b;\n    this.toProgress = 0;\n    this.fromProgress = 0;\n  }\n\n  Arc.prototype.isComplete = function () {\n    return this.toProgress >= 100 && this.fromProgress >= 100;\n  };\n\n  Arc.prototype.getCoordinates = function () {\n    // Center between two points\n    var cX = (this.a.x + this.b.x) / 2;\n    var cY = (this.a.y + this.b.y) / 2;\n\n    // Distance between two points\n    var dX = this.b.x - this.a.x;\n    var dY = this.b.y - this.a.y;\n\n    // Arc radius\n    var r = Math.sqrt(Math.pow(dX, 2) + Math.pow(dY, 2)) / 2;\n\n    // Cartesian to polar points.\n    // Also construct a relative point system based on the center of the polar region.\n    var aTheta = Math.PI + Math.atan((this.a.y - cY) / (this.a.x - cX));\n    var bTheta = Math.atan((this.b.y - cY) / (this.b.x - cX));\n\n    return {\n      cartesianCenter: {\n        x: cX,\n        y: cY\n      },\n      polar: {\n        radius: r,\n        aTheta: aTheta,\n        bTheta: bTheta\n      }\n    };\n  };\n\n  function Dot (x, y, color = COLOR) {\n    this.x = x;\n    this.y = y;\n    this.originalX = x;\n    this.d = Math.max(5, Math.random() * MAX_DIAMETER);\n    this.dy = generateRandomVelocity(VELOCITY);\n    this.color = color;\n    this.speed = 1000 + Math.random() * 1000;\n    this.wander = Math.random() * 100;\n  }\n\n  Dot.prototype.updatePosition = function (timestamp) {\n    this.x = this.wander * Math.sin(timestamp / this.speed) + this.originalX;\n    // this.x += this.dx;\n    this.y += this.dy;\n  };\n\n  function buildCanvas (element) {\n    element.height($(window).innerHeight());\n    console.log('wtf', element)\n    var canvas = new Canvas(element);\n    canvas.start();\n  }\n\n  $(document).ready(function () {\n    // $('.dots-canvas').each(function () {\n    //   buildCanvas($(this));\n    // });\n  });\n\n  return (el) => {\n    $(el || '.dots-canvas').each(function () {\n      buildCanvas($(this));\n    });\n  }\n})(require('jquery'));\n\n\n/*import {Layer, Rect, Stage, Circle, Group, Arc} from 'react-konva'\nimport _ from 'lodash'\n  var MAX_DIAMETER = 30;\n  var VELOCITY = 0.8;\n  var DOT_COUNT = 30;\n  var COLOR = '#e0e6ed';\nexport default class Dots extends React.Component {\n  static defaultProps = {\n    width: 768,\n    height: 900,\n    dotCount: 30\n  }\n\n  state = {};\n\n  constructor(props) {\n    super(props)\n\n    this.state.dots = _.times(props.dotCount, () => new Dot(\n      Math.round(Math.random() * props.width),\n      Math.round(Math.random() * props.height)\n    ))\n\n    this.state.arc = new ArcModel(\n      this.state.dots[0],\n      this.state.dots[1]\n    )\n\n    this.circleRefs = []\n\n    this.paint = this.paint.bind(this)\n  }\n\n  componentDidMount() {\n    this.time = new Date();\n    setTimeout(() => this.paint(), 1000)\n  }\n\n  isDotOutOfBonds(dot) {\n    return dot.x > (this.props.width + dot.d / 2) ||\n      dot.x < (-dot.d / 2) ||\n      dot.y > (this.props.height + (dot.d / 2)) ||\n      dot.y < -(dot.d / 2);\n  }\n\n  paint(time = 0) {\n    this.time = this.time + time;\n    console.log('painting')\n\n    // if (!this.state.arc.isComplete() && this.arcRef) {\n    //   let coordinates = this.state.arc.getCoordinates()\n    //   let dTheta = (coordinates.polar.bTheta - coordinates.polar.aTheta) / 100;\n\n    //   if (this.state.arc.toProgress < 100) {\n    //     let d = dTheta * this.state.arc.toProgress;\n    //     this.state.arc.toProgress += 2;\n\n    //     this.arcRef.to({\n    //       x: coordinates.cartesianCenter.x,\n    //       y: coordinates.cartesianCenter.y,\n    //       outerRadius: coordinates.polar.radius,\n    //       innerRadius: coordinates.polar.radius - 1,\n    //       angle: r2d(coordinates.polar.aTheta),\n    //       rotationDeg: r2d(coordinates.polar.aTheta - d)\n    //     })\n    //   } else if (this.state.arc.fromProgress < 100) {\n    //     let d = dTheta * this.arcRef.fromProgress;\n\n    //     this.arcRef.to({\n    //       x: coordinates.cartesianCenter.x,\n    //       y: coordinates.cartesianCenter.y,\n    //       outerRadius: coordinates.polar.radius,\n    //       innerRadius: coordinates.polar.radius - 1,\n    //       angle: r2d(coordinates.polar.aTheta - d),\n    //       rotationDeg: r2d(coordinates.polar.bTheta)\n    //     })\n    //   }\n    // }\n\n    this.state.dots.forEach((dot, i) => {\n      dot.updatePosition(time)\n\n      if (this.circleRefs[i]) {\n        console.log('moving', i, dot.x, dot.y)\n        this.circleRefs[i].to({\n          x: dot.x,\n          y: dot.y,\n          duration:0.1\n        })\n      }\n\n      if (this.isDotOutOfBonds(dot)) {\n        this.state.dots[i] = new Dot(\n          Math.round(Math.random() * this.props.width),\n          Math.round(Math.random() * this.props.height)\n        )\n      }\n    })\n\n\n    // setTimeout(() => this.paint(10), 100);\n    requestAnimationFrame(this.paint)\n  }\n\n  render() {\n    console.log('render', this.state)\n\n    return (\n      <Stage width={this.props.width} height={this.props.height}>\n        <Layer>\n          {this.state.dots.map((dot, i) => (\n            <Circle\n              ref={comp => this.circleRefs[i] = comp}\n              key={i}\n              x={dot.x}\n              y={dot.y}\n              radius={dot.d}\n              fill={COLOR}\n            />\n          ))}\n        </Layer>\n      </Stage>\n    )\n  }\n}\n\nconst r2d = r => r * (180 / Math.PI);\n\n  function ArcModel (a, b) {\n    this.a = a;\n    this.b = b;\n    this.toProgress = 0;\n    this.fromProgress = 0;\n  }\n\n  ArcModel.prototype.isComplete = function () {\n    return this.toProgress >= 100 && this.fromProgress >= 100;\n  };\n\n  ArcModel.prototype.getCoordinates = function () {\n    // Center between two points\n    var cX = (this.a.x + this.b.x) / 2;\n    var cY = (this.a.y + this.b.y) / 2;\n\n    // Distance between two points\n    var dX = this.b.x - this.a.x;\n    var dY = this.b.y - this.a.y;\n\n    // Arc radius\n    var r = Math.sqrt(Math.pow(dX, 2) + Math.pow(dY, 2)) / 2;\n\n    // Cartesian to polar points.\n    // Also construct a relative point system based on the center of the polar region.\n    var aTheta = Math.PI + Math.atan((this.a.y - cY) / (this.a.x - cX));\n    var bTheta = Math.atan((this.b.y - cY) / (this.b.x - cX));\n\n    return {\n      cartesianCenter: {\n        x: cX,\n        y: cY\n      },\n      polar: {\n        radius: r,\n        aTheta: aTheta,\n        bTheta: bTheta\n      }\n    };\n  };\n\n  function Dot (x, y) {\n    this.x = x;\n    this.y = y;\n    this.originalX = x;\n    this.d = Math.max(5, Math.random() * MAX_DIAMETER);\n    this.dy = generateRandomVelocity(VELOCITY);\n    this.color = COLOR;\n    this.speed = 1000 + Math.random() * 1000;\n    this.wander = Math.random() * 100;\n  }\n\n  Dot.prototype.updatePosition = function (timestamp) {\n    this.x = this.wander * Math.sin(timestamp / this.speed) + this.originalX;\n    // this.x += this.dx;\n    this.y += this.dy;\n  };\n\n  function generateRandomVelocity (maxVelocity) {\n    var direction = Math.random() < 0.5 ? 1 : -1;\n    var lowerBound = 0.2;\n    var velocity = direction * Math.random() * maxVelocity;\n\n    if (direction > 0) {\n      return Math.max(direction * lowerBound, velocity);\n    } else {\n      return Math.min(direction * lowerBound, velocity);\n    }\n\n    return Math.max(0.2, (Math.random() < 0.5 ? 1 : -1) * Math.random() * velocity);\n  }*/\n"],"sourceRoot":""}