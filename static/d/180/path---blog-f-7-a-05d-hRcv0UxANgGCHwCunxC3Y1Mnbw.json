{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"Slackify - Upload files from the CLI with Node JS to Slack","permalink":"/blog/node-slackify-cli","excerpt":"A CLI tool to upload files, or pipe standard input, into Slack. As developers, we're already in our working directory in our console all day. Often we want to share a file, snippet, or some command output with someone on our team. With Slackify you can take a file, or pipe some output, right into Slack to a specific channel or user."}}},{"node":{"frontmatter":{"title":"renderIf - Conditionally render React components","permalink":"/blog/render-if-conditionally-render-react-components","excerpt":"A lightweight curry function used to conditionally render React components cleanly as a familiar control flow."}}},{"node":{"frontmatter":{"title":"Exploring ES2015 - Creating an iterator with Generators","permalink":"/blog/exploring-es7-iterator-generator","excerpt":"A look into how generators work and how we can use them to create an iterable interface for arrays."}}},{"node":{"frontmatter":{"title":"Exploring ES2015 - Private class methods with Babel","permalink":"/blog/exploring-es2015-private-class-methods-babel","excerpt":"Javascript does not support method visibility. There's a few tricks to introduce private methods by determining what you want to export. But when it comes to ES6 classes, we can now create private methods a bit easier."}}},{"node":{"frontmatter":{"title":"Setting up Let's Encrypt Certificates","permalink":"/blog/lets-encrypt-setup","excerpt":"Let's Encrypt provides free SSL certificates and an open source client for generating and setting up your certificates. A movement to encrypt the web. Here we look at how to use the Let's Encrypt tool."}}},{"node":{"frontmatter":{"title":"jQuery Stock Quotes","permalink":"/blog/jquery-stock-quotes","excerpt":"jQuery Stock Quotes is a jQuery plugin that allows developers to seamlessly show stock symbol information."}}},{"node":{"frontmatter":{"title":"Continuously deploying Jekyll with CircleCI and ShipIt","permalink":"/blog/continuous-deployment-jekyll-circleci-shipit","excerpt":"I moved things over to Jekyll. My next step was to start to introduce some deployment automation. Read about what I set up with CircleCI and Shipit for my continuous integration setup."}}},{"node":{"frontmatter":{"title":"Exploring ShipIt","permalink":"/blog/shipit","excerpt":"A dive into the Javascript deployment automation tool, Shipit. You'll find that it's very similar to Grunt and Gulp. And much simpler than Capistrano."}}},{"node":{"frontmatter":{"title":"Digital Smart Mirror lab with React Native","permalink":"/blog/react-native-smart-mirror-lab","excerpt":"Learn how to build your own digital smart mirror with React Native. A perfect DIY hack for a weekend when you want to develop something cool."}}},{"node":{"frontmatter":{"title":"Memory problems when testing large AngularJS applications","permalink":"/blog/angular-unit-test-memory-problems","excerpt":"Memory can become a problem for unit testing large AngularJS problems. Whether you're running Karma with PhantomJS, Chrome, Firefox - we will all share the issue of these browsers pushing the limits of the available memory."}}},{"node":{"frontmatter":{"title":"Twitter Digits for AngularJS","permalink":"/blog/twitter-digits-angularjs","excerpt":"angular-digits is an AngularJS wrapper for Twitterâ€™s Fabric Digits. It provides context with the digest cycle for asynchronous events, as well as a lot of additional utility."}}},{"node":{"frontmatter":{"title":"AngularJS translate-once extension for angular-translate one-time binding support","permalink":"/blog/angularjs-translate-once-angular-translate-one-time-binding","excerpt":"Add one-time binding support for your AngularJS applications by extending angular-translate with translate-once"}}},{"node":{"frontmatter":{"title":"Streaming to Chromecast with Titanium Appcelerator","permalink":"/blog/streaming-chromecast-titanium-appcelerator","excerpt":"Introducing a Javascript Chromecast integration for Titanium Appcelerator projects."}}},{"node":{"frontmatter":{"title":"Configuring Apache to Serve your NodeJS Application","permalink":"/blog/apache-serving-nodejs","excerpt":"With a few simple steps, learn how to configure your Apache server to serve your Node JS applications"}}},{"node":{"frontmatter":{"title":"Using GulpJS to Generate Environment Configuration Modules","permalink":"/blog/angularjs-configuration-with-gulpjs","excerpt":"gulp-ng-config, a GulpJS build task plugin, will generate AngularJS constant modules from JSON files to assist in providing configurations for your projects."}}},{"node":{"frontmatter":{"title":"Wordpress Page Models for Custom Post Types","permalink":"/blog/wordpress-page-models","excerpt":"If your Wordpress projects use a lot of custom fields, it may be a good idea to prepare all the data a page may need outside of the view. I've started to introduce page models to my projects, where all the fields are gathered and prepared before I use them in my templates."}}},{"node":{"frontmatter":{"title":"Merging multiple GulpJS streams into one output file","permalink":"/blog/merging-gulpjs-streams","excerpt":"Learn how to take multiple GulpJS build tasks and merge them into one output stream by combining streams with NodeJS' EventStream"}}},{"node":{"frontmatter":{"title":"Using AWS to serve multiple SSL certs on one server","permalink":"/blog/aws-multiple-ssl-certs","excerpt":"I've had some clients that require one server, many domains. I'm sure this may sound familiar. But what happens when this one box must serve multiple domains with SSL? You can't simply serve two different domain names over :443, as the connection must be established before the virtual host can be looked up, so we have a bit of a race condition. Using Load Balancers as proxies can solve this for us."}}},{"node":{"frontmatter":{"title":"Programming the Foundations of Life, the next age of technology","permalink":"/blog/programming-foundations-life-next-age-technology","excerpt":"Programming a computer started off with punch cards, and only later did we create programming languages to write in. One day, I believe, we'll have a programming language for biotech. We're at the binary stage (DNA), but maybe one day we'll be at the high level language stage."}}}]}},"pageContext":{}}